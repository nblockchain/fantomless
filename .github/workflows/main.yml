name: Build master

on: [push, pull_request]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet: [5.0.401]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Install local tools
      run: dotnet tool restore
    - name: Paket restore
      run: dotnet paket restore
    - name: Build
      run: dotnet fake run build.fsx
      env:
        CI: true
        TABLE_STORAGE_CONNECTION_STRING: ${{ secrets.TABLE_STORAGE_CONNECTION_STRING }}
    - name: "trigger fantomas-tools action"
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/master'
      run: "curl -H 'Accept: application/vnd.github.everest-preview+json' -H 'Authorization: token ${{secrets.FANTOMAS_TOOLS_TOKEN}}' --request POST --data '{\"event_type\": \"fantomas-commit-on-master\"}' https://api.github.com/repos/fsprojects/fantomas-tools/dispatches"

  publish:
    env:
      DEFAULT_REF_TO_NUGET_PUSH: refs/heads/master
      VERSION: 4.5.12.6
    runs-on: windows-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Make paket available
      run: dotnet tool restore
    - name: Paket restore
      run: dotnet paket restore
    - name: Create nuget pkg
      run: dotnet pack --configuration Release src/Fantomas.CoreGlobalTool/Fantomas.CoreGlobalTool.fsproj
    - name: Upload
      run: |
        If ($Env:GITHUB_REF -eq $Env:DEFAULT_REF_TO_NUGET_PUSH) {
            If ('${{ secrets.NUGET_API_KEY }}' -ne '') {
                $fileName= "src/Fantomas.CoreGlobalTool/bin/Release/fantomless-tool.$env:VERSION.nupkg"
                dotnet nuget push $fileName --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
            }
        }

